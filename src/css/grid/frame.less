/*
 * 栅格基础框架
 * 页面等分为12n，其中内容31，间距24，共(31+24)*12=660
 * 1n = 1/12 xn = x/12 左右各留12/660 padding
 * 最左&最右的padding采用c-row -12/660 margin 消除
 * @ BUG
 * 安卓QQ浏览器 X5内核(026008GPU-S)存在弹性盒子兼容性问题-对应浏览器版本6.0.0.1550
 * 实验版X5内核(036006GPU)修复正常-对应浏览器版本2.2.0.60
 * 因此舍弃弹性盒模型自动换行属性
 * @author yangfan
 */


// 卡片容器样式
.c-container {
    margin: @container-margin 0;
    padding: @container-padding-top @container-padding-x @container-padding-bottom;
    background-color: @color-container-bg;
    width: auto;
    color: @color-text;			// 卡片默认字体颜色
    font: @font-normal;
    word-break: break-word;     // 单词间不折行
    word-wrap: break-word;
    border: 0 none;
    box-shadow: 0 1px 0 #e7e7e7;
}

// 铺满整个页面的结果，可用于单页唯一答案等特殊展现
.c-container-tile {
    margin: 0;
    padding: 0;
}


// 栅格父容器、伸缩盒模型父容器样式
.c-flexbox, 
.c-row {
    width: auto;
    // 旧版伸缩盒模型
    display: -webkit-box;
    -webkit-box-orient: horizontal; // 子元素左右排列
    -webkit-box-direction: normal;  // 子元素顺序排列
    -webkit-box-pack: justify;      // 子元素左右方向两端对齐
    -webkit-box-align: stretch;     // 子元素垂直方向顶部对齐
    -webkit-box-lines: single;      // multiple属性不被支持!!!!!WTF!!!!!
    // 新版伸缩盒模型
    display: -webkit-flex;
    -webkit-flex-direction: row;            // 子元素左右顺序排列
    -webkit-justify-content: space-between; // 子元素左右方向两端对齐
    -webkit-align-items: stretch;           // 子元素垂直方向顶部对齐
    -webkit-align-content: flex-start;      // 子元素垂直方向顶部对齐(多行情况)
    -webkit-flex-wrap: nowrap;              // 子元素溢出时不换行(为兼容安卓qq浏览器,暂时不允许换行)
}
.c-row {
    margin-right: percentage(-@grid-columns-padding / (@grid-columns-width * @grid-columns));
    margin-left: percentage(-@grid-columns-padding / (@grid-columns-width * @grid-columns));
}
// 1px间隔的栅格，脱离标准栅格，仅用于特殊展现，如三联章、四连涨图片等
.c-row-tight {
    margin-right: -1px;
    margin-left: 0;
}
// 撑满结果的容器，脱离标准栅格，仅用于特殊展现，如横滑图片等
.c-row-tile {
    position: relative;
    margin: 0 -@container-padding-x;
    .c-row {
        padding: 0 @container-padding-x;
    }
}
.c-row-top {
    position: relative;
    margin-top: -@container-padding-top;
    .c-row:first-child {
        padding-top: @container-padding-top;
    }
}
.c-row-bottom {
    position: relative;
    margin-bottom: -@container-padding-bottom;
    .c-row:last-child {
        padding-bottom: @container-padding-bottom;
    }
}
.c-row,
.c-row-tile,
.c-row-top,
.c-row-bottom {
    * {
        -webkit-box-sizing: border-box;     // for android 2~3
        box-sizing: border-box;
    }
}

// 栅格子容器样式
.make-grid(@grid-columns);

.common-grid-columns(@sum) {
    .col(@index) {                              // initial
        @item: ~".c-span@{index}";
        .col((@index + 1), @item);
    }
    .col(@index, @list) when (@index =< @sum) { // general
        @item: ~".c-span@{index}";
        .col((@index + 1), ~"@{list}, @{item}");
    }
    .col(@index, @list) when (@index > @sum) {  // terminal
        @{list} {
            position: relative;
            min-height: 1px;
            padding-right: percentage(@grid-columns-padding / (@grid-columns-width * @sum));
            padding-left: percentage(@grid-columns-padding / (@grid-columns-width * @sum));
        }
    }
    .col(1);
}

.tight-grid-columns(@sum) {
    .col(@index) {                              // initial
        @item: ~".c-row-tight .c-span@{index}";
        .col((@index + 1), @item);
    }
    .col(@index, @list) when (@index =< @sum) { // general
        @item: ~".c-row-tight .c-span@{index}";
        .col((@index + 1), ~"@{list}, @{item}");
    }
    .col(@index, @list) when (@index > @sum) {  // terminal
        @{list} {
            padding-right: 1px;
            padding-left: 0;
        }
    }
    .col(1);
}

.calc-grid-columns(@sum, @index: 1) when (@index =< @sum) {
    .c-span@{index} {
        width: (@index * 100% / @sum);
        -webkit-box-flex: @index;
        //-webkit-flex-grow: @index;
        -webkit-flex: @index @index auto;
    }
    .calc-grid-columns(@sum, (@index + 1));
}

.make-grid(@sum) {
    .common-grid-columns(@sum);
    .tight-grid-columns(@sum);
    .calc-grid-columns(@sum);
}
